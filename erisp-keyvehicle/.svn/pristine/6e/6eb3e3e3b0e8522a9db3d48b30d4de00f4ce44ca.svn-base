package com.gkhb.keyvehicle.service;

import java.util.ArrayList;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.gkhb.keyvehicle.common.model.Page;
import com.gkhb.keyvehicle.mapper.DisposalProcessMapper;
import com.gkhb.keyvehicle.mapper.EarlyWarningInfoMapper;
import com.gkhb.keyvehicle.mapper.VehicleInfoMapper;
import com.gkhb.keyvehicle.model.DisposalProcess;
import com.gkhb.keyvehicle.model.EarlyWarningInfo;
import com.gkhb.keyvehicle.model.VehicleInfo;
import com.gkhb.keyvehicle.model.view.WarningDisposalView;

/**
 * 预警处置服务实现类
 * 
 * @author 张顺江
 * @createTime 2017年9月10日 下午11:44:07
 */
@Service("warningDisposalService")
public class WarningDisposalServiceImpl implements WarningDisposalService {
    
    private static final Logger LOGGER = LoggerFactory.getLogger(WarningDisposalServiceImpl.class);

    @Autowired
    DisposalProcessMapper disposalProcessMapper;
    @Autowired
    EarlyWarningInfoMapper earlyWarningInfoMapper;
    @Autowired
    VehicleInfoMapper vehicleInfoMapper;

    @Override
    public List<WarningDisposalView> queryDisposalProcess(String userType, String department, Page page, String vehicleType) {
        if(userType == null){
            LOGGER.error("userType is null");
        }
        List<WarningDisposalView> warningDisposalViewList = new ArrayList<WarningDisposalView>();

        List<DisposalProcess> disposalProcessList = null;
        // 根据用户类型查询其下预警处置信息
        switch (userType) {
        case "1":
            disposalProcessList = disposalProcessMapper.queryJGJBMDisposalProcess(department, page);
            break;
        case "2":
            disposalProcessList = disposalProcessMapper.queryHYBMDisposalProcess(department, page);
            break;
        }

        if (disposalProcessList != null && disposalProcessList.size() > 0) {
            for (DisposalProcess disposalProcess : disposalProcessList) {
                // 查询预警信息
                EarlyWarningInfo earlyWarningInfo = earlyWarningInfoMapper.queryEarlyWarningInfoById(disposalProcess.getWarningId());
                // 查询车辆信息
                VehicleInfo vehicleInfo = vehicleInfoMapper.queryVehicleInfoById(earlyWarningInfo.getVehicleId());
                if(vehicleType!=null && !vehicleType.equals("") && !vehicleType.equals(vehicleInfo.getVehicleType())){
                	continue;
                }else{
	                WarningDisposalView warningDisposalView = new WarningDisposalView();
	                warningDisposalView.setDisposalProcess(disposalProcess);
	                warningDisposalView.setEarlyWarningInfo(earlyWarningInfo);
	                warningDisposalView.setVehicleInfo(vehicleInfo);
	                warningDisposalViewList.add(warningDisposalView);
                }
            }
        }

        return warningDisposalViewList;
    }

    @Override
    public boolean updateDisposalProcess(DisposalProcess disposalProcess) {
        int count = 0;
        if(disposalProcess !=null){
           count = disposalProcessMapper.updateDisposalProcess(disposalProcess);
        }
        return count > 0 ? true : false;
    }
}
