app.controller('realLineMapCtrl', [
		'$scope',
		'$filter',
		'$timeout',
		'$state',
		'$stateParams',
		'warningMapService',
		'mapService',
		'$rootScope',
		'SweetAlert',
		'$interval',
		//'$modalInstance',
		//'params',
		function($scope, $filter, $timeout, $state, $stateParams, warningMapService, mapService, $rootScope,SweetAlert, $interval/*,$modalInstance,params*/) {
	
	var params=JSON.parse($stateParams.params);
	var map;	//地图
	var layerOfOnVehicle; //车辆图标图层
	var realLocationRefresh; //定时刷新车辆位置
	var haveShowLine = false; //标记是否打开了行驶轨迹
	$scope.queryConditionData = {};
	var hisRefresh = false;//车辆历史轨迹是否定时刷新，默认为false
	var lineGrap; //轨迹图层
	var showLineLength = 2; //定义每次加载的历史轨迹长度
	var departName = $rootScope.depName;
	
	/**********************************地图图层显示start**********************************/
    $scope.showMap = function(){
    	require([  
            "esri/map", 
            "esri/layers/ArcGISTiledMapServiceLayer", 
            "esri/geometry/Extent", 
            "esri/geometry/Point", 
            "esri/geometry/Polyline", 
            "esri/SpatialReference",  
            "esri/symbols/SimpleMarkerSymbol",
            "esri/symbols/PictureMarkerSymbol", 
            "esri/symbols/SimpleLineSymbol", 
            "esri/layers/GraphicsLayer", 
            "esri/symbols/SimpleFillSymbol", 
            "esri/lang",
            "esri/Color", 
            "dojo/dom-style",
            "dijit/TooltipDialog", 
            "dijit/popup", 
            "esri/graphic"  
        ], function(
        		Map, 
        		ArcGISTiledMapServiceLayer, 
        		Extent, 
        		Point, 
        		Polyline, 
        		SpatialReference, 
        		SimpleMarkerSymbol,
        		PictureMarkerSymbol, 
        		SimpleLineSymbol, 
        		GraphicsLayer, 
        		SimpleFillSymbol, 
                esriLang,
                Color, 
                domStyle,
                TooltipDialog, 
                dijitPopup,
        		Graphic) {  
//    		var BASE_SERVER = 'http://20.0.56.14:8399/arcgis/rest/services/201406chengdu/cd_base_0716/MapServer'
   		var BASE_SERVER = 'http://server.arcgisonline.com/arcgis/rest/services/World_Topo_Map/MapServer';
            map = new Map("map", {  
                center: [104.0657754083, 30.6583098090],  
//              zoom: 4,//内网地图缩放等级
                zoom: 14,
                logo:false,
                nav:false,
                slider:false
            }); 
    		var layer = new ArcGISTiledMapServiceLayer(BASE_SERVER);
            map.addLayer(layer);

            lineGrap = new GraphicsLayer();
            map.addLayer(lineGrap);
        });   
    }
    /**********************************地图图层显示end**********************************/
    
    //查询某段时间内某辆车的历史轨迹信息
	$scope.queryServiceLocation = function(plateNumber) {
		
//		$scope.queryConditionData.plateNumber = plateNumber;
//		$scope.queryConditionData.startTime = currentDate;
		var date = new Date();
		var startTime = date.Format("yyyy-MM-dd HH:mm:ss");
		var endTime = null;
        $scope.hisLocations = [];
        mapService.queryRealOrHisLocations(plateNumber,departName,startTime,endTime,function (data) {
	    //清空存储某段时间内某辆车的历史轨迹信息数组
	    //if (data.state == 200) {
        if (data.status == 0) {
	    	//$scope.movePaths = eval(data.messageBody.movePaths);
        	$scope.movePaths = eval(data.datas);
	        var result = $scope.movePaths;
	        for(var i=0;i<result.length;i++){
	        	var location = "";
//	        	console.log(result[0].vehicleType);
	            location = result[i].latitude+"-"+result[i].longitude+"-"+result[i].vehicleType+"-"+result[i].plateNumber;
	            $scope.hisLocations.push(location);
	            }
	        $scope.queryHistTra();
	        }
	    }, function (err) {
	    })
	}
	
	//点击查询车辆历史轨迹
    $scope.queryHistTra = function(){
    	if(!hisRefresh){
    		hisRefresh = true;
    		loadLocalTimes = 0;
    		showLine(map);
    	}
    }
    
    //历史轨迹
 	function showLine(map){
 		 haveShowLine = true; //标记行驶轨迹已打开
 		 var hisLocations = $scope.hisLocations;	//包含车辆经纬度的字符串
         var paths = [];
         if(hisLocations.length > 0){
         	for(var i = 0;i<showLineLength;i++){
//         		console.log(hisLocations[i]);
	           	var local = hisLocations[i].split("-");
	           	var his = [];
	           	his[0] = local[1]*1;
	           	his[1] = local[0]*1;
	           	paths.push(his);
       		}
         	showLineLength = showLineLength+2;
         	if(showLineLength>hisLocations.length-2 & showLineLength<hisLocations.length){
         		showLineLength = hisLocations.length;
         	}
         }
		  	//在地图上连线
		    polylineJson={"paths": [paths],"spatialReference":{"wkid":4326}}; 
		    var graphicsLayer = new esri.layers.GraphicsLayer();//添加线的图层，方便清除上一个图层所画的线
//	    	map.graphics.clear();//清除地图上现有的点
		    lineGrap.clear();
//	    	map.removeLayer(graphicsLayer);//清除地图上的线
		    var polyline=new esri.geometry.Polyline(polylineJson);
		    var sys=new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,new esri.Color([0,0,255]),3);
		    var graphic2=new esri.Graphic(polyline,sys);
		   	lineGrap.add(graphic2); 
		   	if(hisLocations.length > 0 ){
		   		//前面+n，这里就要-(n-1)
		   		var local = hisLocations[showLineLength-3].split("-");
//		   		console.log($scope.queryConditionData.vehicleType);
		   		if(local[2] == "新能源"){
		   			var pic = new esri.symbol.PictureMarkerSymbol("assets/images/new-energy-vehicle.png",21,21);
		   		}else if(local[2] == "危化品"){
		   			var pic = new esri.symbol.PictureMarkerSymbol("assets/images/dangerous-goods-vehicle.png",21,21);
		   		}else if(local[2] == "冷链车"){
		   			var pic = new esri.symbol.PictureMarkerSymbol("assets/images/cold-chain-vehicle.png",21,21);
		   		}else if(local[2] == "普通车"){
		   			var pic = new esri.symbol.PictureMarkerSymbol("assets/images/ordinary-vehicle.png",21,21);
		   		}
		   		showLocation(local[1]*1,local[0]*1,local[2]*1,local[3]*1,pic);
		   		
		   		var centerPoint = new esri.geometry.Point(local[1]*1,local[0]*1);
//		   		map.centerAndZoom(centerPoint,14);//内网地图缩放等级
		   		map.centerAndZoom(centerPoint,14);
//		   		map.centerAt(centerPoint);
		   	}
		   	
		   	//在地图上添加点
		   	function showLocation(x, y, type, plateNumber, pic) {  
		   		var pt = new esri.geometry.Point(x,y);//创建一个点对象
		   		var attr = {"vehicleType":type,"plateNumber":plateNumber};
		   		var infoTemplate = new esri.InfoTemplate("车牌号码：${plateNumber}","车辆类型：${vehicleType}");
		   		var gp = new esri.Graphic(pt,pic,attr);//设置样式
		   		lineGrap.add(gp);//添加到图层中        
		   	};
		   	if(hisRefresh){
		   		//js控制ID为hisButton的按钮的点击
//		   		$("#hisButton").trigger("click"); 

		   		if(showLineLength<=hisLocations.length){
		   			showLineRefresh = $interval(function(){
		   				showLine(map);
		   			},100,1);
		   		}else{
		   			showLineLength = 2;
		   		}
		   	}
		   	
 	};
    
    $scope.convertVehicleType = function(type){
    	if(type!=undefined && type!=""){
    		switch(type)
	    	{
		    	case 'A1':
		    		return "新能源";
		    		break;
		    	case 'A2':
		    		return "冷链车"
		      	  	break;
		    	case 'A3':
		    		return "危化品"
		    		break;
		    	case 'A4':
		    		return "普通车"
		    		break;
	    	}
    	}
    }
    
    //取消
    $scope.cancel = function() {
        //$modalInstance.dismiss('cancel');
    	if(params.type=="map"){
    		$state.go('app.map');
    	}else{
    		$state.go('app.warningDisposal.warningMap');
    	}
    };
	     
    $scope.showMap();
    $scope.queryServiceLocation(params.plateNumber);
    
} ]);

Date.prototype.Format = function (fmt) {    
    var o = {    
        "M+": this.getMonth() + 1, //月份     
        "d+": this.getDate(), //日     
        "H+": this.getHours(), //小时     
        "m+": this.getMinutes(), //分     
        "s+": this.getSeconds(), //秒     
        "q+": Math.floor((this.getMonth() + 3) / 3), //季度     
        "S": this.getMilliseconds() //毫秒     
    };    
    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));    
    for (var k in o)    
    if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));    
    return fmt;    
} 
